<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.renyujie.gulimall</groupId>
	<artifactId>gulimall-product</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>gulimall-product</name>
	<description>商品服务</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR3</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.renyujie.gulimall</groupId>
			<artifactId>gulimall-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>RELEASE</version>
			<scope>test</scope>
		</dependency>
<!--		阿里云oss 官网推荐-->
<!--		<dependency>-->
<!--			<groupId>com.aliyun.oss</groupId>-->
<!--			<artifactId>aliyun-sdk-oss</artifactId>-->
<!--			<version>3.10.2</version>-->
<!--		</dependency>-->

		<!--        阿里云oss 通过starter版本控制导入  这里根据评论得知要加版本号-->
<!--		<dependency>-->
<!--			<groupId>com.alibaba.cloud</groupId>-->
<!--			<artifactId>spring-cloud-starter-alicloud-oss</artifactId>-->
<!--			<version>2.1.0.RELEASE</version>-->
<!--		</dependency>-->

<!--		第三方服务 oss-->
		<dependency>
			<groupId>com.renyujie.gulimall</groupId>
			<artifactId>gulimall-third-party</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!--在不重启服务器的时候，实时更新html-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!--引入模版引擎 thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

<!--		引入redis-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>


		<!-- 在视屏中 p154压测出现产生堆外内存溢出：OutOfDirectMemoryError异常
     1）springboot2.0以后默认使用lettuce作为操作redis的客户端。他使用netty进行网络通信
     2）lettuce的bug导致netty堆外内存溢出 -Xmx1024m；netty如果没有指定堆外内存，默认使用-Xmx1024m，跟jvm设置的一样【迟早会出异常】
      可以通过-Dio.netty.maxDirectMemory进行设置【仍然会异常】
      解决方案：不能使用-Dio.netty.maxDirectMemory
      1）升级lettuce客户端；【2.3.2已解决】【lettuce使用netty吞吐量很大】
      2）切换使用jedis客户端【这里学习一下如何使用jedis，但是最后不选用】
      主要学的是发现问题的思想和源码的设计模式

      然后摘录几个弹幕观点（仅供参考）：
      1.注意redis需要开启持久化,否则服务器已关闭就没了
      2.阿里云单核两G的吞吐量总是2，其实是云服务带宽不够用了【我自己压测也是这个结果。redis在阿里云上】
      3.弹幕中反馈新版本已修复这个问题【所以最好的办法是升级版本】
      4.改用jedis后报错的把压测线程数调小，传输数据量相对较大，大多数线程拿不到连接就超时了(connect time out错误)
        改用jedis后报错的还可以去配置文件里把jedis的最大连接数和活动连接数调大，这样还能增加吞吐量
        jedis的连接池放开到50左右合适           【jedis比较老 不如netty】

		-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-data-redis</artifactId>-->
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>io.lettuce</groupId>-->
<!--					<artifactId>lettuce-core</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
<!--		</dependency>-->
<!--		-->
<!--		<dependency>-->
<!--			<groupId>redis.clients</groupId>-->
<!--			<artifactId>jedis</artifactId>-->
<!--		</dependency>-->

		<!--整合redisson 作为分布式锁，分布式对象等功能框架-->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.12.0</version>
		</dependency>

		<!--整合SringCache 简化缓存开发-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!--属性提示工具 自创配置文件的时候就有提示了 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 整合Spring Session完成session共享问题 微服务自治，就不放在common里了-->
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-data-redis</artifactId>
		</dependency>

		<!--引入 actuator统计审计信息 配合sentinel management.endpoints.web.exposure.include=* -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
